// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Article /> should render 1 <Article /> 1`] = `
<div
  className="col s12 m6"
>
  <div
    className="card horizontal grey darken-3"
  >
    <div
      className="card-image"
    >
      <img
        alt=""
        src="https://tctechcrunch2011.files.wordpress.com/2017/06/screen-shot-2017-06-15-at-10-11-28-am.png?w=764&h=400&crop=1"
        style={
          Object {
            "height": 341,
          }
        }
      />
    </div>
    <div
      className="card-stacked"
    >
      <div
        className="card-content"
      >
        <div
          className="article-header white-text"
        >
          AMAZON’S DASH WAND BARCODE SCANNER RETUR
          ...
        </div>
        <div
          className="divider"
        />
        <div
          className="article-description white-text"
        >
          The first iteration of Amazon’s Dash Wand wasn’t long for this world. The company trialed the barcode scanner with selec
          ...
          <br />
        </div>
        <div>
          <span
            className="white-text left-align"
          >
            Brian Heater
          </span>
        </div>
      </div>
      <div
        className="social-share row"
      >
        <span
          className="col m3 s3"
        >
          <div
            className="SocialMediaShareButton SocialMediaShareButton--facebook"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            style={Object {}}
            tabIndex="0"
          >
            <div
              style={
                Object {
                  "height": 32,
                  "width": 32,
                }
              }
            >
              <svg
                className="social-icon social-icon--facebook "
                fill="white"
                height={32}
                viewBox="0 0 64 64"
                width={32}
              >
                <g>
                  <circle
                    cx="32"
                    cy="32"
                    fill="#3b5998"
                    r="31"
                    style={Object {}}
                  />
                </g>
                <g>
                  <path
                    d="M34.1,47V33.3h4.6l0.7-5.3h-5.3v-3.4c0-1.5,0.4-2.6,2.6-2.6l2.8,0v-4.8c-0.5-0.1-2.2-0.2-4.1-0.2 c-4.1,0-6.9,2.5-6.9,7V28H24v5.3h4.6V47H34.1z"
                  />
                </g>
              </svg>
            </div>
          </div>
        </span>
        <span
          className="col m3 s3"
        >
          <div
            className="SocialMediaShareButton SocialMediaShareButton--whatsapp"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            style={Object {}}
            tabIndex="0"
          >
            <div
              style={
                Object {
                  "height": 32,
                  "width": 32,
                }
              }
            >
              <svg
                className="social-icon social-icon--whatsapp "
                fill="white"
                height={32}
                viewBox="0 0 64 64"
                width={32}
              >
                <g>
                  <circle
                    cx="32"
                    cy="32"
                    fill="#2cb742"
                    r="31"
                    style={Object {}}
                  />
                </g>
                <g>
                  <path
                    d="m42.32286,33.93287c-0.5178,-0.2589 -3.04726,-1.49644 -3.52105,-1.66732c-0.4712,-0.17346 -0.81554,-0.2589 -1.15987,0.2589c-0.34175,0.51004 -1.33075,1.66474 -1.63108,2.00648c-0.30032,0.33658 -0.60064,0.36247 -1.11327,0.12945c-0.5178,-0.2589 -2.17994,-0.80259 -4.14759,-2.56312c-1.53269,-1.37217 -2.56312,-3.05503 -2.86603,-3.57283c-0.30033,-0.5178 -0.03366,-0.80259 0.22524,-1.06149c0.23301,-0.23301 0.5178,-0.59547 0.7767,-0.90616c0.25372,-0.31068 0.33657,-0.5178 0.51262,-0.85437c0.17088,-0.36246 0.08544,-0.64725 -0.04402,-0.90615c-0.12945,-0.2589 -1.15987,-2.79613 -1.58964,-3.80584c-0.41424,-1.00971 -0.84142,-0.88027 -1.15987,-0.88027c-0.29773,-0.02588 -0.64208,-0.02588 -0.98382,-0.02588c-0.34693,0 -0.90616,0.12945 -1.37736,0.62136c-0.4712,0.5178 -1.80194,1.76053 -1.80194,4.27186c0,2.51134 1.84596,4.945 2.10227,5.30747c0.2589,0.33657 3.63497,5.51458 8.80262,7.74113c1.23237,0.5178 2.1903,0.82848 2.94111,1.08738c1.23237,0.38836 2.35599,0.33657 3.24402,0.20712c0.99159,-0.15534 3.04985,-1.24272 3.47963,-2.45956c0.44013,-1.21683 0.44013,-2.22654 0.31068,-2.45955c-0.12945,-0.23301 -0.46601,-0.36247 -0.98382,-0.59548m-9.40068,12.84407l-0.02589,0c-3.05503,0 -6.08417,-0.82849 -8.72495,-2.38189l-0.62136,-0.37023l-6.47252,1.68286l1.73463,-6.29129l-0.41424,-0.64725c-1.70875,-2.71846 -2.6149,-5.85116 -2.6149,-9.07706c0,-9.39809 7.68934,-17.06155 17.15993,-17.06155c4.58253,0 8.88029,1.78642 12.11655,5.02268c3.23625,3.21036 5.02267,7.50812 5.02267,12.06476c-0.0078,9.3981 -7.69712,17.06155 -17.14699,17.06155m14.58906,-31.58846c-3.93529,-3.80584 -9.1133,-5.95471 -14.62789,-5.95471c-11.36055,0 -20.60848,9.2065 -20.61625,20.52564c0,3.61684 0.94757,7.14565 2.75211,10.26282l-2.92557,10.63564l10.93337,-2.85309c3.0136,1.63108 6.4052,2.4958 9.85634,2.49839l0.01037,0c11.36574,0 20.61884,-9.2091 20.62403,-20.53082c0,-5.48093 -2.14111,-10.64081 -6.03239,-14.51915"
                  />
                </g>
              </svg>
            </div>
          </div>
        </span>
        <span
          className="col m3 s3"
        >
          <div
            className="SocialMediaShareButton SocialMediaShareButton--twitter"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            style={Object {}}
            tabIndex="0"
          >
            <div
              style={
                Object {
                  "height": 32,
                  "width": 32,
                }
              }
            >
              <svg
                className="social-icon social-icon--twitter "
                fill="white"
                height={32}
                viewBox="0 0 64 64"
                width={32}
              >
                <g>
                  <circle
                    cx="32"
                    cy="32"
                    fill="#00aced"
                    r="31"
                    style={Object {}}
                  />
                </g>
                <g>
                  <path
                    d="M48,22.1c-1.2,0.5-2.4,0.9-3.8,1c1.4-0.8,2.4-2.1,2.9-3.6c-1.3,0.8-2.7,1.3-4.2,1.6 C41.7,19.8,40,19,38.2,19c-3.6,0-6.6,2.9-6.6,6.6c0,0.5,0.1,1,0.2,1.5c-5.5-0.3-10.3-2.9-13.5-6.9c-0.6,1-0.9,2.1-0.9,3.3 c0,2.3,1.2,4.3,2.9,5.5c-1.1,0-2.1-0.3-3-0.8c0,0,0,0.1,0,0.1c0,3.2,2.3,5.8,5.3,6.4c-0.6,0.1-1.1,0.2-1.7,0.2c-0.4,0-0.8,0-1.2-0.1 c0.8,2.6,3.3,4.5,6.1,4.6c-2.2,1.8-5.1,2.8-8.2,2.8c-0.5,0-1.1,0-1.6-0.1c2.9,1.9,6.4,2.9,10.1,2.9c12.1,0,18.7-10,18.7-18.7 c0-0.3,0-0.6,0-0.8C46,24.5,47.1,23.4,48,22.1z"
                  />
                </g>
              </svg>
            </div>
          </div>
        </span>
        <span
          className="col m3 s3"
        >
          <div
            className="SocialMediaShareButton SocialMediaShareButton--googlePlus"
            onClick={[Function]}
            onKeyPress={[Function]}
            role="button"
            style={Object {}}
            tabIndex="0"
          >
            <div
              style={
                Object {
                  "height": 32,
                  "width": 32,
                }
              }
            >
              <svg
                className="social-icon social-icon--google "
                fill="white"
                height={32}
                viewBox="0 0 64 64"
                width={32}
              >
                <g>
                  <circle
                    cx="32"
                    cy="32"
                    fill="#dd4b39"
                    r="31"
                    style={Object {}}
                  />
                </g>
                <g>
                  <path
                    d="M25.3,30.1v3.8h6.3c-0.3,1.6-1.9,4.8-6.3,4.8c-3.8,0-6.9-3.1-6.9-7s3.1-7,6.9-7c2.2,0,3.6,0.9,4.4,1.7l3-2.9c-1.9-1.8-4.4-2.9-7.4-2.9c-6.1,0-11.1,5-11.1,11.1s5,11.1,11.1,11.1c6.4,0,10.7-4.5,10.7-10.9c0-0.7-0.1-1.3-0.2-1.8H25.3L25.3,30.1z M49.8,28.9h-3.2v-3.2h-3.2v3.2h-3.2v3.2h3.2v3.2h3.2v-3.2h3.2"
                  />
                </g>
              </svg>
            </div>
          </div>
        </span>
      </div>
      <div
        className="card-action row"
      >
        <div
          className="css-15ol66j"
        >
          <span />
        </div>
        <button
          className="btn waves col s6 m6 tooltipped"
          data-delay="50"
          data-position="top"
          data-tooltip="Read Full Article"
          onClick={[Function]}
        >
          <i
            className="material-icons"
          >
            reorder
          </i>
        </button>
        <button
          className="btn col s6 m6 blue darken-1 tooltipped"
          data-delay="50"
          data-position="top"
          data-tooltip="Save Articles to Favourites"
          onClick={[Function]}
        >
          <i
            className="material-icons"
          >
            save
          </i>
        </button>
      </div>
    </div>
  </div>
</div>
`;

exports[`<Article /> should render 1 <ArticleDetailsPage /> 1`] = `
<section>
  <nav>
    <div
      className="nav-wrapper grey darken-3"
    >
      <div
        className="brand-logo"
      >
        <span
          className="grey darken-3 sidebtn"
        >
          <span>
            <span
              className="grey darken-3"
              data-activates="sidenav_0"
            >
              <i
                className="material-icons white-text sidebtn"
              >
                menu
              </i>
            </span>
            <ul
              className="side-nav"
              id="sidenav_0"
            >
              <li
                className=""
              >
                <div
                  className="userView"
                >
                  <div
                    className="background"
                  >
                    <img
                      src="../../../../images/cloudsidebar.jpg"
                    />
                  </div>
                  <a
                    href="#!user"
                  >
                    <img
                      className="circle"
                      src="../../../../images/login2.jpg"
                    />
                  </a>
                  <a
                    href="#!name"
                  >
                    <span
                      className="white-text name"
                    >
                      anonymous
                    </span>
                  </a>
                  <a
                    href="#!email"
                  >
                    <span
                      className="white-text email"
                    >
                      anonymous@unknown.com
                    </span>
                  </a>
                </div>
              </li>
              <li
                className=""
                onClick={[Function]}
              >
                <a
                  className=""
                  href="#!"
                >
                  View Favourites
                </a>
              </li>
              <li
                className="divider"
              >
                <a
                  className=""
                  href="#!"
                />
              </li>
            </ul>
          </span>
        </span>
        <span
          className="white-text branded-logo"
          onClick={[Function]}
        >
          headlines
        </span>
      </div>
      <ul
        className="right hide-on-med-and-down orange-text text-accent-1"
        id="nav-mobile"
      >
        <li>
          <a
            onClick={[Function]}
          >
            Log Out
          </a>
        </li>
      </ul>
    </div>
  </nav>
  <div
    className="preloader-wrapper big active center-align"
  >
    <div
      className="spinner-layer spinner-blue center-align"
    >
      <div
        className="circle-clipper left"
      >
        <div
          className="circle "
        />
      </div>
      <div
        className="gap-patch"
      >
        <div
          className="circle"
        />
      </div>
      <div
        className="circle-clipper right"
      >
        <div
          className="circle"
        />
      </div>
    </div>
    <div
      className="spinner-layer spinner-red center-align"
    >
      <div
        className="circle-clipper left"
      >
        <div
          className="circle"
        />
      </div>
      <div
        className="gap-patch"
      >
        <div
          className="circle"
        />
      </div>
      <div
        className="circle-clipper right"
      >
        <div
          className="circle"
        />
      </div>
    </div>
    <div
      className="spinner-layer spinner-yellow center-align"
    >
      <div
        className="circle-clipper left"
      >
        <div
          className="circle"
        />
      </div>
      <div
        className="gap-patch"
      >
        <div
          className="circle"
        />
      </div>
      <div
        className="circle-clipper right"
      >
        <div
          className="circle"
        />
      </div>
    </div>
    <div
      className="spinner-layer spinner-green center-align"
    >
      <div
        className="circle-clipper left"
      >
        <div
          className="circle"
        />
      </div>
      <div
        className="gap-patch"
      >
        <div
          className="circle"
        />
      </div>
      <div
        className="circle-clipper right"
      >
        <div
          className="circle"
        />
      </div>
    </div>
  </div>
</section>
`;

exports[`<Article /> should render 1 <ArticlePage /> 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <section>
    <div>
        <withRouter(NavBar)
            user={null}
        />
        <Spinner />
    </div>
    <Footer />
</section>,
  "nodes": Array [
    <section>
      <div>
            <withRouter(NavBar)
                  user={null}
            />
            <Spinner />
      </div>
      <Footer />
</section>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <ArticlePage
        history={
                Object {
                        "location": Object {
                          "pathname": "https://localhost:8080/cnn/top",
                        },
                      }
        }
/>,
      "_debugID": 81,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": ArticlePage {
        "_reactInternalInstance": [Circular],
        "context": Object {},
        "getArticles": [Function],
        "props": Object {
          "history": Object {
            "location": Object {
              "pathname": "https://localhost:8080/cnn/top",
            },
          },
        },
        "refs": Object {},
        "state": Object {
          "articles": "",
          "sortOptions": Array [],
          "sourceName": "localhost:8080",
          "value": "cnn",
        },
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <section>
          <div>
                    <withRouter(NavBar)
                              user={null}
                    />
                    <Spinner />
          </div>
          <Footer />
</section>,
        "_debugID": 82,
        "_renderedOutput": <section>
          <div>
                    <withRouter(NavBar)
                              user={null}
                    />
                    <Spinner />
          </div>
          <Footer />
</section>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <ArticlePage
    history={
        Object {
            "location": Object {
              "pathname": "https://localhost:8080/cnn/top",
            },
          }
    }
/>,
}
`;

exports[`<Article /> should render 1 <ArticlesPage /> 1`] = `null`;
